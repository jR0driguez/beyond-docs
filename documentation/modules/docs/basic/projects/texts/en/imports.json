{
  "en": {
    "imports": {
      "h1": [
        "projects",
        "Import of projects"
      ],
      "c1": "project",
      "p1": "In BeyondJS, a project can be imported by another, and function as a library, giving the main project access to its modules. This functionality is key to thinking of solutions with interconnected microservice structures or libraries that contain reusable code.",
      "p2": "To exemplify it, we can mention a solution that manages a web page, a mobile application, and an administrative panel, all as independent projects that feed from the same data source. The importation of projects allows all the data logic, to be handled as independent projects, and used by the three applications, thus allowing the re-use of the code.",
      "p3": "The importation of projects is performed from the project.json, and the projects must be added to the project's entry of beyond.json.",
      "p4": "If the projects are created through the Dashboard, the file beyond.json is modified automatically.",
      "p5": "Following the mentioned example, the project with the modules that manage the data and connects to the database, could be called models, and in ordet to be  imported into the other projects, the following code should have to be added to the project.json.",
      "c2": "libraries",
      "p6": "The importation property receives an array of items, which enables multiple projects being imported if required."
    }
  }
}
